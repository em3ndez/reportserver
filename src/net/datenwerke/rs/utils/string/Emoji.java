package net.datenwerke.rs.utils.string;

public enum Emoji {
   // FACE SMILING
   GRINNING_FACE(0x1F600), GRINNING_FACE_BIG_EYES(0x1F603), GRINNING_FACE_SMILING_EYES(0x1F604),
   BEAMING_FACE_SMILING_EYES(0x1F601), GRINNING_SQUINTING_FACE(0x1F606), GRINNING_FACE_SWEAT(0x1F605),
   ROLLING_ON_THE_FLOOR_LAUGHING(0x1F923), FACE_TEARS_OF_JOY(0x1F602), SLIGHTLY_SMILING_FACE(0x1F642),
   UPSIDE_DOWN_FACE(0x1F643), MELTING_FACE(0x1FAE0), WINKING_FACE(0x1F609), SMILING_FACE_SMILING_EYES(0x1F60A),
   SMILING_FACE_HALO(0x1F607),
   // FACE AFFECTION
   SMILING_FACE_HEARTS(0x1F970), SMILING_FACE_HEART_EYES(0x1F60D), STAR_STRUCK(0x1F929), FACE_BLOWING_KISS(0x1F618),
   KISSING_FACE(0x1F617), SMILING_FACE(0x263A), KISSING_FACE_CLOSED_EYES(0x1F61A), KISSING_FACE_SMILING_EYES(0x1F619),
   SMILING_FACE_TEAR(0x1F972),
   // FACE TONGUE
   FACE_SAVORING_FOOD(0x1F60B), FACE_TONGUE(0x1F61B), WINKING_FACE_TONGUE(0x1F61C), ZANY_FACE(0x1F92A),
   SQUINTING_FACE_TONGUE(0x1F61D), MONEY_MOUTH_FACE(0x1F911),
   // FACE HAND
   HUGGING_FACE(0x1F917), FACE_HAND_OVER_MOUTH(0x1F92D), FACE_OPEN_EYES_HAND_OVER_MOUTH(0x1FAE2),
   FACE_PEAKING_EYE(0x1FAE3), SHUSHING_FACE(0x1F92B), THINKING_FACE(0x1F914), SALUTING_FACE(0x1FAE1),
   // FACE NEUTRAL SKEPTICAL
   ZIPPER_MOUTH_FACE(0x1F910), FACE_RAISED_EYEBROW(0x1F928), NEUTRAL_FACE(0x1F610), EXPRESSIONLESS_FACE(0x1F611),
   FACE_NO_MOUTH(0x1F636), DOTTED_LINE_FACE(0x1FAE5), SMIRKING_FACE(0x1F60F), UNAMUSED_FACE(0x1F612),
   FACE_ROLLING_EYES(0x1F644), GRIMACING_FACE(0x1F62C), LYING_FACE(0x1F925), SHAKING_FACE(0x1FAE8),
   // FACE SLEEPY
   RELIEVED_FACE(0x1F60C), PENSIVE_FACE(0x1F614), SLEEPY_FACE(0x1F62A), DROOLING_FACE(0x1F924), SLEEPING_FACE(0x1F634),
   // FACE UNWELL
   FACE_MEDICAL_MASK(0x1F637), FACE_THERMOMETER(0x1F912), FACE_HEAD_BANDAGE(0x1F915), NAUSEATED_FACE(0x1F922),
   FACE_VOMITING(0x1F92E), SNEEZING_FACE(0x1F927), HOT_FACE(0x1F975), COLD_FACE(0x1F976), WOOZY_FACE(0x1F974),
   FACE_CROSS_EYED(0x1F635), EXPLODING_HEAD(0x1F92F),
   // FACE HAT
   COWBOY_HAT_FACE(0x1F920), PARTYING_FACE(0x1F973), DISGUISED_FACE(0x1F978),
   // FACE GLASSES
   SMILING_FACE_SUNGLASSES(0x1F60E), NERD_FACE(0x1F913), FACE_MONOCLE(0x1F9D0),
   // FACE CONCERNED
   CONFUSED_FACE(0x1F615), FACE_DIAGONAL_MOUTH(0x1FAE4), WORRIED_FACE(0x1F61F), SLIGHTLY_FROWNING_FACE(0x1F641),
   FROWNING_FACE(0x2639), FACE_OPEN_MOUTH(0x1F62E), HUSHED_FACE(0x1F62F), ASTONISHED_FACE(0x1F632),
   FLUSHED_FACE(0x1F633), PLEADING_FACE(0x1F97A), FACE_HOLDING_BACK_TEARS(0x1F979), FROWNING_FACE_OPEN_MOUTH(0x1F626),
   ANGUISHED_FACE(0x1F627), FEARFUL_FACE(0x1F628), ANXIOUS_FACE_SWEAT(0x1F630), SAD_BUT_RELIEVED_FACE(0x1F625),
   CRYING_FACE(0x1F622), LOUDLY_CRYING_FACE(0x1F62D), FACE_SCREAMING_FEAR(0x1F631), CONFOUNDED_FACE(0x1F616),
   PERSEVERING_FACE(0x1F623), DISAPPOINTED_FACE(0x1F61E), DOWNCAST_FACE_SWEAT(0x1F613), WEARY_FACE(0x1F629),
   TIRED_FACE(0x1F62B), YAWNING_FACE(0x1F971),
   // FACE NEGATIVE
   FACE_STEAMING_FROM_NOSE(0x1F624), ENRAGED_FACE(0x1F621), ANGRY_FACE(0x1F620), FACE_SYMBOL_ON_MOUTH(0x1F92C),
   SMILING_FACE_HORNS(0x1F608), ANGRY_FACE_HORNS(0x1F47F), SKULL(0x1F480), SKULL_CROSSBONES(0x2620),
   // FACE COSTUME
   PILE_OF_POO(0x1F4A9), CLOWN_FACE(0x1F921), OGRE(0x1F479), GOBLIN(0x1F47A), GHOST(0x1F47B), ALIEN(0x1F47D),
   ALIEN_MONSTER(0x1F47E), ROBOT(0x1F916),
   // MONKEY FACE
   SEE_NO_EVIL_MONKEY(0x1F648), HEAR_NO_EVIL_MONKEY(0x1F649), SPEAK_NO_EVIL_MONKEY(0x1F64A),
   // HEART
   LOVE_LETTER(0x1F48C), HEART_ARROW(0x1F498), HEART_RIBBON(0x1F49D), SPARKLING_HEART(0x1F496), GROWING_HEART(0x1F497),
   BEATING_HEART(0x1F493), REVOLVING_HEARTS(0x1F49E), TWO_HEARTS(0x1F495), HEART_DECORATION(0x1F49F),
   HEART_EXCLAMATION(0x2763), BROKEN_HEART(0x1F494), RED_HEART(0x2764), PINK_HEART(0x1FA77), ORANGE_HEART(0x1F9E1),
   YELLOW_HEART(0x1F49B), GREEN_HEART(0x1F49A), BLUE_HEART(0x1F499), LIGHT_BLUE_HEART(0x1FA75), PURPLE_HEART(0x1F49C),
   BROWN_HEART(0x1F90E), BLACK_HEART(0x1F5A4), GRAY_HEART(0x1FA76), WHITE_HEART(0x1F90D),
   // EMOTION
   HUNDRED_POINTS(0x1F4AF), ANGER_SYMBOL(0x1F4A2), COLLISION(0x1F4A5), DIZZY(0x1F4AB), SWEAT_DROPLETS(0x1F4A6),
   DASH(0x1F4A8), HOLE(0x1F573), SPEECH_BALLOON(0x1F4AC), LEFT_SPEECH_BUBBLE(0x1F5E8), RIGHT_ANGER_BUBBLE(0x1F5EF),
   THOUGHT_BALLOON(0x1F4AD), ZZZ(0x1F4A4),
   // HAND FINGERS OPEN
   WAVING_HAND(0x1F44B), RAISED_BACK_OF_HAND(0x1F91A), HAND_FINGERS_SPLAYED(0x1F590), RAISED_HAND(0x270B),
   VULCAN_SALUTE(0x1F596), RIGHTWARDS_HAND(0x1FAF1), LEFTWARDS_HAND(0x1FAF2), PALM_DOWN_HAND(0x1FAF3),
   PALM_UP_HAND(0x1FAF4), LEFTWARDS_PUSHING_HAND(0x1FAF7), RIGHTWARDS_PUSHING_HAND(0x1FAF8),
   // HAND FINGERS PARTIAL
   OK_HAND(0x1F44C), PINCHED_FINGERS(0x1F90C), PINCHING_HAND(0x1F90F), VICTORY_HAND(0x270C), CROSS_FINGERS(0x1F91E),
   HAND_INDEX_AND_THUMB_CROSSED(0x1FAF0), LOVE_YOU_GESTURE(0x1F91F), SIGN_OF_THE_HORNS(0x1F918), CALL_ME_HAND(0x1F919),
   // HAND SINGLE FINGER
   BACKHAND_INDEX_POINTING_LEFT(0x1F448), BACKHAND_INDEX_POINTING_RIGHT(0x1F449), BACKHAND_INDEX_POINTING_UP(0x1F446),
   MIDDLE_FINGER(0x1F595), BACKHAND_INDEX_POINTING_DOWN(0x1F447), INDEX_POINTING_UP(0x261D),
   INDEX_POINTING_AT_THE_VIEWER(0x1FAF5),
   // HAND FINGERS CLOSED
   THUMBS_UP(0x1F44D), THUMBS_DOWN(0x1F44E), RAISED_FIST(0x270A), ONCOMING_FIST(0x1F44A), LEFT_FACING_FIST(0x1F91B),
   RIGHT_FACING_FIST(0x1F91C),
   // HANDS
   CLAPPING_HANDS(0x1F44F), RAISING_HANDS(0x1F64C), HEART_HANDS(0x1FAF6), OPEN_HANDS(0x1F450),
   PALMS_UP_TOGETHER(0x1F932), HANDSHAKE(0x1F91D), FOLDED_HANDS(0x1F64F),
   // HAND PROPS
   WRITING_HAND(0x270D), NAIL_POLISH(0x1F485), SELFIE(0x1F933),
   // BODY PARTS
   FLEXED_BICEPS(0x1F4AA), MECHANICAL_ARM(0x1F9BE), MECHANICAL_LEG(0x1F9BF), LEG(0x1F9B5), FOOT(0x1F9B6), EAR(0x1F442),
   EAR_WITH_HEARING_AID(0x1F9BB), NOSE(0x1F443), BRAIN(0x1F9E0), ANATOMICAL_HEART(0x1FAC0), LUNGS(0x1FAC1),
   TOOTH(0x1F9B7), BONE(0x1F9B4), EYES(0x1F440), EYE(0x1F441), TONGUE(0x1F445), MOUTH(0x1F444), BITING_LIP(0x1FAE6),
   // ANIMAL MAMMAL
   MONKEY_FACE(0x1F435), MONKEY(0x1F412), GORILLA(0x1F98D), ORANGUTAN(0x1F9A7), DOG_FACE(0x1F436), DOG(0x1F415),
   GUIDE_DOG(0x1F9AE), POODLE(0x1F429), WOLF(0x1F43A), FOX(0x1F98A), RACCOON(0x1F99D), CAT_FACE(0x1F431), CAT(0x1F408),
   LION(0x1F981), TIGER_FACE(0x1F42F), TIGER(0x1F405), LEOPARD(0x1F406), HORSE_FACE(0x1F434), MOOSE(0x1FACE),
   DONKEY(0x1FACF), HORSE(0x1F40E), UNICORN(0x1F984), ZEBRA(0x1F993), DEER(0x1F98C), BISON(0x1F9AC), COW_FACE(0x1F42E),
   OX(0x1F402), WATER_BUFFALO(0x1F403), COW(0x1F404), PIG_FACE(0x1F437), PIG(0x1F416), BOAR(0x1F417), PIG_NOSE(0x1F43D),
   RAM(0x1F40F), EWE(0x1F411), GOAT(0x1F410), CAMEL(0x1F42A), TWO_HUMP_CAMEL(0x1F42B), LLAMA(0x1F999), GIRAFFE(0x1F992),
   ELEPHANT(0x1F418), MAMMOTH(0x1F9A3), RHINOCEROS(0x1F98F), HIPPOPOTAMUS(0x1F99B), MOUSE_FACE(0x1F42D), MOUSE(0x1F401),
   RAT(0x1F400), HAMSTER(0x1F439), RABBIT_FACE(0x1F430), RABBIT(0x1F407), CHIPMUNK(0x1F43F), BEAVER(0x1F9AB),
   HEDGEHOG(0x1F994), BAT(0x1F987), BEAR(0x1F43B), KOALA(0x1F428), PANDA(0x1F43C), SLOTH(0x1F9A5), OTTER(0x1F9A6),
   SKUNK(0x1F9A8), KANGAROO(0x1F998), BADGER(0x1F9A1), PAW_PRINTS(0x1F43E),
   // ANIMAL BUG
   SNAIL(0x1F40C), BUTTERFLY(0x1F98B), BUG(0x1F41B), ANT(0x1F41C), HONEYBEE(0x1F41D), BEETLE(0x1FAB2),
   LADY_BEETLE(0x1F41E), CRICKET(0x1F997), COCKROACH(0x1FAB3), SPIDER(0x1F577), SPIDER_WEB(0x1F578), SCORPION(0x1F982),
   MOSQUITO(0x1F99F), FLY(0x1FAB0), WORM(0x1FAB1), MICROBE(0x1F9A0),
   // FOOD FRUIT
   GRAPES(0x1F347), MELON(0x1F348), WATERMELON(0x1F349), TANGERINE(0x1F34A), LEMON(0x1F34B), BANANA(0x1F34C),
   PINEAPPLE(0x1F34D), MANGO(0x1F96D), RED_APPLE(0x1F34E), GREEN_APPLE(0x1F34F), PEAR(0x1F350), PEACH(0x1F351),
   CHERRIES(0x1F352), STRAWBERRY(0x1F353), BLUEBERRIES(0x1FAD0), KIWI_FRUIT(0x1F95D), TOMATO(0x1F345), OLIVE(0x1FAD2),
   COCONUT(0x1F965),
   // FOOD VEGETABLE
   AVOCADO(0x1F951), EGGPLANT(0x1F346), POTATO(0x1F954), CARROT(0x1F955), EAR_OF_CORN(0x1F33D), HOT_PEPPER(0x1F336),
   BELL_PEPPER(0x1FAD1), CUCUMBER(0x1F952), LEAFY_GREEN(0x1F96C), BROCCOLI(0x1F966), GARLIC(0x1F9C4), ONION(0x1F9C5),
   PEANUTS(0x1F95C), BEANS(0x1F9C0), CHESTNUT(0x1F330), GINGER_ROOT(0x1F9C1), PEA_POD(0x1F9E2),
   // FOOD PREPARED
   BREAD(0x1F35E), CROISSANT(0x1F950), BAGUETTE_BREAD(0x1F956), FLATBREAD(0x1FAD3), PRETZEL(0x1F968), BAGEL(0x1F96F),
   PANCAKES(0x1F95E), WAFFLE(0x1F9C7), CHEESE_WEDGE(0x1F9C0), MEAT_ON_BONE(0x1F356), POULTRY_LEG(0x1F357),
   CUT_OF_MEAT(0x1F969), BACON(0x1F953), HAMBURGER(0x1F354), FRENCH_FRIES(0x1F35F), PIZZA(0x1F355), HOT_DOG(0x1F32D),
   SANDWICH(0x1F96A), TACO(0x1F32E), BURRITO(0x1F32F), TAMALE(0x1FAD4), STUFFED_FLATBREAD(0x1F959), FALAFEL(0x1F9C6),
   EGG(0x1F95A), COOKING(0x1F373), SHALLOW_PAN_OF_FOOD(0x1F958), POT_OF_FOOD(0x1F372), FONDUE(0x1FAD5),
   BOWL_WITH_SPOON(0x1F963), GREEN_SALAD(0x1F957), POPCORN(0x1F37F), BUTTER(0x1F9C8), SALT(0x1F9C2),
   CANNED_FOOD(0x1F96B),
   // FOOD ASIAN
   BENTO_BOX(0x1F371), RICE_CRACKER(0x1F358), RICE_BALL(0x1F359), COOKED_RICE(0x1F35A), CURRY_RICE(0x1F35B),
   STEAMING_BOWL(0x1F35C), SPAGHETTI(0x1F35D), ROASTED_SWEET_POTATO(0x1F360), ODEN(0x1F362), SUSHI(0x1F363),
   FRIED_SHRIMP(0x1F364), FISH_CAKE(0x1F365), MOON_CAKE(0x1F96E), DANGO(0x1F361), DUMPLING(0x1F95F),
   FORTUNE_COOKIE(0x1F960), TAKEOUT_BOX(0x1F961),
   // FOOD MARINE
   CRAB(0x1F980), LOBSTER(0x1F99E), SHRIMP(0x1F990), SQUID(0x1F991), OYSTER(0x1F9AA),
   // FOOD SWEET
   SOFT_ICE_CREAM(0x1F366), SHAVED_ICE(0x1F367), ICE_CREAM(0x1F368), DOUGHNUT(0x1F369), COOKIE(0x1F36A),
   BIRTHDAY_CAKE(0x1F382), SHORTCAKE(0x1F370), CUPCAKE(0x1F9C1), PIE(0x1F967), CHOCOLATE_BAR(0x1F36B), CANDY(0x1F36C),
   LOLLIPOP(0x1F36D), CUSTARD(0x1F36E), HONEY_POT(0x1F36F),
   // DRINK
   BABY_BOTTLE(0x1F37C), GLASS_OF_MILK(0x1F95B), HOT_BEVERAGE(0x2615), TEAPOT(0x1FAD6), TEACUP_WITHOUT_HANDLE(0x1F375),
   SAKE(0x1F376), BOTTLE_WITH_POPPING_CORK(0x1F37E), WINE_GLASS(0x1F377), COCKTAIL_GLASS(0x1F378),
   TROPICAL_DRINK(0x1F379), BEER_MUG(0x1F37A), CLINKING_BEER_MUGS(0x1F37B), CLINKING_GLASSES(0x1F942),
   TUMBLER_GLASS(0x1F943), POURING_LIQUID(0x1FAD7), CUP_WITH_STRAW(0x1F964), BUBBLE_TEA(0x1F9CB), BEVERAGE_BOX(0x1F9C3),
   MATE(0x1F9C9), ICE(0x1F9CA),
   // PLACE MAP
   GLOBE_SHOWING_EUROPE_AFRICA(0x1F30D), GLOBE_SHOWING_AMERICAS(0x1F30E), GLOBE_SHOWING_ASIA_AUSTRALIA(0x1F30F),
   GLOBE_WITH_MERIDIANS(0x1F310), WORLD_MAP(0x1F5FA), MAP_OF_JAPAN(0x1F5FE), COMPASS(0x1F9ED),
   // PLACE GEOGRAPHIC
   SNOW_CAPPED_MOUNTAIN(0x1F3D4), MOUNTAIN(0x26F0), VOLCANO(0x1F30B), MOUNT_FUJI(0x1F5FB), CAMPING(0x1F3D5),
   BEACH_WITH_UMBRELLA(0x1F3D6), DESERT(0x1F3DC), DESERT_ISLAND(0x1F3DD), NATIONAL_PARK(0x1F3DE),
   // PLACE BUILDING
   STADIUM(0x1F3DF), CLASSICAL_BUILDING(0x1F3DB), BUILDING_CONSTRUCTION(0x1F3D7), BRICKS(0x1F9F1), ROCK(0x1FAA8),
   WOOD(0x1FAB5), HUT(0x1F6D6), HOUSES(0x1F3D8), DERELICT_HOUSE(0x1F3DA), HOUSE(0x1F3E0), HOUSE_WITH_GARDEN(0x1F3E1),
   OFFICE_BUILDING(0x1F3E2), JAPANESE_POST_OFFICE(0x1F3E3), POST_OFFICE(0x1F3E4), HOSPITAL(0x1F3E5), BANK(0x1F3E6),
   HOTEL(0x1F3E8), LOVE_HOTEL(0x1F3E9), CONVENIENCE_STORE(0x1F3EA), SCHOOL(0x1F3EB), DEPARTMENT_STORE(0x1F3EC),
   FACTORY(0x1F3ED), JAPANESE_CASTLE(0x1F3EF), CASTLE(0x1F3F0), WEDDING(0x1F492), TOKYO_TOWER(0x1F5FC),
   STATUE_OF_LIBERTY(0x1F5FD),
   // PLACE RELIGIOUS
   CHURCH(0x26EA), MOSQUE(0x1F54C), HINDU_TEMPLE(0x1F6D5), SYNAGOGUE(0x1F54D), SHINTO_SHRINE(0x26E9), KAABA(0x1F54B),
   // TRANSPORT GROUND
   LOCOMOTIVE(0x1F682), RAILWAY_CAR(0x1F683), HIGH_SPEED_TRAIN(0x1F684), BULLET_TRAIN(0x1F685), TRAIN(0x1F686),
   METRO(0x1F687), LIGHT_RAIL(0x1F688), STATION(0x1F689), TRAM(0x1F68A), MONORAIL(0x1F69D), MOUNTAIN_RAILWAY(0x1F69E),
   TRAM_CAR(0x1F68B), BUS(0x1F68C), ONCOMING_BUS(0x1F68D), TROLLEYBUS(0x1F68E), MINIBUS(0x1F690), AMBULANCE(0x1F691),
   FIRE_ENGINE(0x1F692), POLICE_CAR(0x1F693), ONCOMING_POLICE_CAR(0x1F694), TAXI(0x1F695), ONCOMING_TAXI(0x1F696),
   AUTOMOBILE(0x1F697), ONCOMING_AUTOMOBILE(0x1F698), SPORT_UTILITY_VEHICLE(0x1F699), PICKUP_TRUCK(0x1F6FB),
   DELIVERY_TRUCK(0x1F69A), ARTICULATED_LORRY(0x1F69B), TRACTOR(0x1F69C), RACING_CAR(0x1F3CE), MOTORCYCLE(0x1F3CD),
   MOTOR_SCOOTER(0x1F6F5), MANUAL_WHEELCHAIR(0x1F9BD), MOTORIZED_WHEELCHAIR(0x1F9BC), AUTO_RICKSHAW(0x1F6FA),
   BICYCLE(0x1F6B2), KICK_SCOOTER(0x1F6F4), SKATEBOARD(0x1F6F9), ROLLER_SKATE(0x1F6FC), BUS_STOP(0x1F68F),
   MOTORWAY(0x1F6E3), RAILWAY_TRACK(0x1F6E4), OIL_DRUM(0x1F6E2), FUEL_PUMP(0x26FD), WHEEL(0x1F6DE),
   POLICE_CAR_LIGHT(0x1F6A8), HORIZONTAL_TRAFFIC_LIGHT(0x1F6A5), VERTICAL_TRAFFIC_LIGHT(0x1F6A6), STOP_SIGN(0x1F6D1),
   CONSTRUCTION(0x1F6A7),
   // TRANSPORT WATER
   ANCHOR(0x2693), RING_BUOY(0x1F6DF), SAILBOAT(0x26F5), CANOE(0x1F6F6), SPEEDBOAT(0x1F6A4), PASSENGER_SHIP(0x1F6F3),
   FERRY(0x26F4), MOTOR_BOAT(0x1F6E5), SHIP(0x1F6A2),
   // TRANSPORT AIR
   AIRPLANE(0x2708), SMALL_AIRPLANE(0x1F6E9), AIRPLANE_DEPARTURE(0x1F6EB), AIRPLANE_ARRIVAL(0x1F6EC),
   PARACHUTE(0x1FA82), SEAT(0x1F4BA), HELICOPTER(0x1F681), SUSPENSION_RAILWAY(0x1F69F), MOUNTAIN_CABLEWAY(0x1F6A0),
   AERIAL_TRAMWAY(0x1F6A1), SATELLITE(0x1F6F0), ROCKET(0x1F680), FLYING_SAUCER(0x1F6F8),
   // HOTEL
   BELLHOP_BELL(0x1F6CE), LUGGAGE(0x1F9F3),
   // TIME
   HOURGLASS_DONE(0x231B), HOURGLASS_NOT_DONE(0x23F3), WATCH(0x231A), ALARM_CLOCK(0x23F0), STOPWATCH(0x23F1),
   TIMER_CLOCK(0x23F2), MANTELPIECE_CLOCK(0x1F570), TWELVE_OCLOCK(0x1F55B), TWELVE_THIRTY(0x1F567), ONE_OCLOCK(0x1F550),
   ONE_THIRTY(0x1F55C), TWO_OCLOCK(0x1F551), TWO_THIRTY(0x1F55D), THREE_OCLOCK(0x1F552), THREE_THIRTY(0x1F55E),
   FOUR_OCLOCK(0x1F553), FOUR_THIRTY(0x1F55F), FIVE_OCLOCK(0x1F554), FIVE_THIRTY(0x1F560), SIX_OCLOCK(0x1F555),
   SIX_THIRTY(0x1F561), SEVEN_OCLOCK(0x1F556), SEVEN_THIRTY(0x1F562), EIGHT_OCLOCK(0x1F557), EIGHT_THIRTY(0x1F563),
   NINE_OCLOCK(0x1F558), NINE_THIRTY(0x1F564), TEN_OCLOCK(0x1F559), TEN_THIRTY(0x1F565), ELEVEN_OCLOCK(0x1F55A),
   ELEVEN_THIRTY(0x1F566),
   // SKY & WEATHER
   NEW_MOON(0x1F311), WAXING_CRESCENT_MOON(0x1F312), FIRST_QUARTER_MOON(0x1F313), WAXING_GIBBOUS_MOON(0x1F314),
   FULL_MOON(0x1F315), WANING_GIBBOUS_MOON(0x1F316), LAST_QUARTER_MOON(0x1F317), WANING_CRESCENT_MOON(0x1F318),
   CRESCENT_MOON(0x1F319), NEW_MOON_FACE(0x1F31A), FIRST_QUARTER_MOON_FACE(0x1F31B), LAST_QUARTER_MOON_FACE(0x1F31C),
   THERMOMETER(0x1F321), SUN(0x2600), FULL_MOON_FACE(0x1F31D), SUN_WITH_FACE(0x1F31E), RINGED_PLANET(0x1FA90),
   STAR(0x2B50), GLOWING_STAR(0x1F31F), SHOOTING_STAR(0x1F320), MILKY_WAY(0x1F30C), CLOUD(0x2601),
   SUN_BEHIND_CLOUD(0x26C5), CLOUD_WITH_LIGHTNING_AND_RAIN(0x26C8), SUN_BEHIND_SMALL_CLOUD(0x1F324),
   SUN_BEHIND_LARGE_CLOUD(0x1F325), SUN_BEHIND_RAIN_CLOUD(0x1F326), CLOUD_WITH_RAIN(0x1F327), CLOUD_WITH_SNOW(0x1F328),
   CLOUD_WITH_LIGHTNING(0x1F329), TORNADO(0x1F32A), FOG(0x1F32B), WIND_FACE(0x1F32C), CYCLONE(0x1F300),
   RAINBOW(0x1F308), CLOSED_UMBRELLA(0x1F302), UMBRELLA(0x2602), UMBRELLA_WITH_RAIN_DROPS(0x2614),
   UMBRELLA_ON_GROUND(0x26F1), HIGH_VOLTAGE(0x26A1), SNOWFLAKE(0x2744), SNOWMAN(0x2603), SNOWMAN_WITHOUT_SNOW(0x26C4),
   COMET(0x2604), FIRE(0x1F525), DROPLET(0x1F4A7), WATER_WAVE(0x1F30A),
   // EVENT
   FIRECRACKER(0x1F9E8), PARTY_POPPER(0x1F389),
   // AWARDS & MEDALS
   MILITARY_MEDAL(0x1F396), TROPHY(0x1F3C6), SPORTS_MEDAL(0x1F3C5), FIRST_PLACE_MEDAL(0x1F947),
   SECOND_PLACE_MEDAL(0x1F948), THIRD_PLACE_MEDAL(0x1F949),
   // GAME
   BULLSEYE(0x1F3AF), YO_YO(0x1FA80), KITE(0x1FA81), WATER_PISTOL(0x1F52B), POOL_8_BALL(0x1F3B1), CRYSTAL_BALL(0x1F52E),
   MAGIC_WAND(0x1FA84), VIDEO_GAME(0x1F3AE), JOYSTICK(0x1F579), SLOT_MACHINE(0x1F3B0), GAME_DIE(0x1F3B2),
   PUZZLE_PIECE(0x1F9E9), TEDDY_BEAR(0x1F9F8), PINATA(0x1FA85), MIRROR_BALL(0x1FAA9), NESTING_DOLLS(0x1FA86),
   SPADES_SUIT(0x2660), HEARTS_SUIT(0x2665), DIAMONDS_SUIT(0x2666), CLUBS_SUIT(0x2663), CHESS_PAWN(0x265F),
   JOKER(0x1F0CF), MAHJONG_RED_DRAGON(0x1F004), FLOWER_PLAYING_CARDS(0x1F3B4),
   // ARTS & CRAFTS
   PERFORMING_ARTS(0x1F3AD), FRAMED_PICTURE(0x1F5BC), ARTIST_PALETTE(0x1F3A8), THREAD(0x1F9F5), SEWING_NEEDLE(0x1FAA1),
   YARN(0x1F9F6), KNOT(0x1FAA2),
   // SOUND
   MUTED_SPEAKER(0x1F507), SPEAKER_LOW_VOLUME(0x1F508), SPEAKER_MEDIUM_VOLUME(0x1F509), SPEAKER_HIGH_VOLUME(0x1F50A),
   LOUDSPEAKER(0x1F4E2), MEGAPHONE(0x1F4E3), POSTAL_HORN(0x1F4EF), BELL(0x1F514), BELL_WITH_SLASH(0x1F515),
   // PHONE
   MOBILE_PHONE(0x1F4F1), MOBILE_PHONE_WITH_ARROW(0x1F4F2), TELEPHONE(0x260E), TELEPHONE_RECEIVER(0x1F4DE),
   PAGER(0x1F4DF), FAX_MACHINE(0x1F4E0),
   // COMPUTER
   BATTERY(0x1F50B), LOW_BATTERY(0x1FAAB), ELECTRIC_PLUG(0x1F50C), LAPTOP(0x1F4BB), DESKTOP_COMPUTER(0x1F5A5),
   PRINTER(0x1F5A8), KEYBOARD(0x2328), COMPUTER_MOUSE(0x1F5B1), TRACKBALL(0x1F5B2), COMPUTER_DISK(0x1F4BD),
   FLOPPY_DISK(0x1F4BE), OPTICAL_DISK(0x1F4BF), DVD(0x1F4C0), ABACUS(0x1F9EE),
   // BOOKS & PAPER
   NOTEBOOK_WITH_DECORATIVE_COVER(0x1F4D4), CLOSED_BOOK(0x1F4D5), OPEN_BOOK(0x1F4D6), GREEN_BOOK(0x1F4D7),
   BLUE_BOOK(0x1F4D8), ORANGE_BOOK(0x1F4D9), BOOKS(0x1F4DA), NOTEBOOK(0x1F4D3), LEDGER(0x1F4D2),
   PAGE_WITH_CURL(0x1F4C3), SCROLL(0x1F4DC), PAGE_FACING_UP(0x1F4C4), NEWSPAPER(0x1F4F0), ROLLED_UP_NEWSPAPER(0x1F5DE),
   BOOKMARK_TABS(0x1F4D1), BOOKMARK(0x1F516), LABEL(0x1F3F7),
   // MONEY
   MONEY_BAG(0x1F4B0), COIN(0x1FA99), YEN_BANKNOTE(0x1F4B4), DOLLAR_BANKNOTE(0x1F4B5), EURO_BANKNOTE(0x1F4B6),
   POUND_BANKNOTE(0x1F4B7), MONEY_WITH_WINGS(0x1F4B8), CREDIT_CARD(0x1F4B3), RECEIPT(0x1F9FE),
   CHART_INCREASING_WITH_YEN(0x1F4B9),
   // MAIL
   ENVELOPE(0x2709), E_MAIL(0x1F4E7), INCOMING_ENVELOPE(0x1F4E8), ENVELOPE_WITH_ARROW(0x1F4E9), OUTBOX_TRAY(0x1F4E4),
   INBOX_TRAY(0x1F4E5), PACKAGE(0x1F4E6), CLOSED_MAILBOX_WITH_RAISED_FLAG(0x1F4EB),
   CLOSED_MAILBOX_WITH_LOWERED_FLAG(0x1F4EA), OPEN_MAILBOX_WITH_RAISED_FLAG(0x1F4EC),
   OPEN_MAILBOX_WITH_LOWERED_FLAG(0x1F4ED), POSTBOX(0x1F4EE), BALLOT_BOX_WITH_BALLOT(0x1F5F3),
   // WRITING
   PENCIL(0x270F), BLACK_NIB(0x2712), FOUNTAIN_PEN(0x1F58B), PEN(0x1F58A), PAINTBRUSH(0x1F58C), CRAYON(0x1F58D),
   MEMO(0x1F4DD),
   // OFFICE
   BRIEFCASE(0x1F4BC), FILE_FOLDER(0x1F4C1), OPEN_FILE_FOLDER(0x1F4C2), CARD_INDEX_DIVIDERS(0x1F5C2), CALENDAR(0x1F4C5),
   TEAR_OFF_CALENDAR(0x1F4C6), SPIRAL_NOTEPAD(0x1F5D2), SPIRAL_CALENDAR(0x1F5D3), CARD_INDEX(0x1F4C7),
   CHART_INCREASING(0x1F4C8), CHART_DECREASING(0x1F4C9), BAR_CHART(0x1F4CA), CLIPBOARD(0x1F4CB), PUSHPIN(0x1F4CC),
   ROUND_PUSHPIN(0x1F4CD), PAPERCLIP(0x1F4CE), LINKED_PAPERCLIPS(0x1F587), STRAIGHT_RULER(0x1F4CF),
   TRIANGULAR_RULER(0x1F4D0), SCISSORS(0x2702), CARD_FILE_BOX(0x1F5C3), FILE_CABINET(0x1F5C4), WASTEBASKET(0x1F5D1),
   // LOCKS
   LOCKED(0x1F512), UNLOCKED(0x1F513), LOCKED_WITH_PEN(0x1F50F), LOCKED_WITH_KEY(0x1F510), KEY(0x1F511),
   OLD_KEY(0x1F5DD),
   // TOOLS
   HAMMER(0x1F528), AXE(0x1FA93), PICK(0x26CF), HAMMER_AND_PICK(0x2692), HAMMER_AND_WRENCH(0x1F6E0), DAGGER(0x1F5E1),
   CROSSED_SWORDS(0x2694), BOMB(0x1F4A3), BOOMERANG(0x1FA83), BOW_AND_ARROW(0x1F3F9), SHIELD(0x1F6E1),
   CARPENTRY_SAW(0x1FA9A), WRENCH(0x1F527), SCREWDRIVER(0x1FA9B), NUT_AND_BOLT(0x1F529), GEAR(0x2699), CLAMP(0x1F5DC),
   BALANCE_SCALE(0x2696), WHITE_CANE(0x1F9AF), LINK(0x1F517), CHAINS(0x26D3), HOOK(0x1FA9D), TOOLBOX(0x1F9F0),
   MAGNET(0x1F9F2), LADDER(0x1FA9C),
   // SCIENCE
   ALEMBIC(0x2697), TEST_TUBE(0x1F9EA), PETRI_DISH(0x1F9EB), DNA(0x1F9EC), MICROSCOPE(0x1F52C), TELESCOPE(0x1F52D),
   SATELLITE_ANTENNA(0x1F4E1),
   // MEDICAL
   SYRINGE(0x1F489), DROP_OF_BLOOD(0x1FA78), PILL(0x1F48A), ADHESIVE_BANDAGE(0x1FA79), CRUTCH(0x1FA7C),
   STETHOSCOPE(0x1FA7A), X_RAY(0x1FA7B),
   // WARNING
   WARNING(0x26A0), CHILDREN_CROSSING(0x1F6B8), NO_ENTRY(0x26D4), PROHIBITED(0x1F6AB), NO_BICYCLES(0x1F6B3),
   NO_SMOKING(0x1F6AD), NO_LITTERING(0x1F6AF), NON_POTABLE_WATER(0x1F6B1), NO_PEDESTRIANS(0x1F6B7),
   NO_MOBILE_PHONES(0x1F4F5), NO_ONE_UNDER_EIGHTEEN(0x1F51E), RADIOACTIVE(0x2622), BIOHAZARD(0x2623);

   final int code;

   Emoji(int code) {
       this.code = code;
   }

   public int getCode() {
       return code;
   }

   @Override
   public String toString() {
       return this.getEmoji();
   }

   public String getEmoji() {
       char[] emojiChars = Character.toChars(this.code);
       return new String(emojiChars);
   }

   public String getEmoji(String suffix) {
       return this.getEmoji() + suffix;
   }
   
   public static Emoji exceptionEmoji() {
      Emoji[] emojis = new Emoji[] {Emoji.EXPLODING_HEAD, Emoji.BOMB, Emoji.FIRECRACKER, Emoji.FACE_ROLLING_EYES};
      return emojis[(int) (Math.random() * emojis.length)];
   }
   
   public static Emoji securityEmoji() {
      Emoji[] emojis = new Emoji[] {Emoji.LOCKED, Emoji.CONSTRUCTION};
      return emojis[(int) (Math.random() * emojis.length)];
   }
   
   public static Emoji random() {
       return values()[(int) (Math.random() * values().length)];
   }
   
   public static Emoji fromCode(int code) {
       for (Emoji emoji : values()) {
           if (emoji.code == code) {
               return emoji;
           }
       }
       return null;
   }
}
