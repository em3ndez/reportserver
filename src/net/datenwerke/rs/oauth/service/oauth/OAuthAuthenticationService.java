package net.datenwerke.rs.oauth.service.oauth;

import java.io.IOException;
import java.util.concurrent.ExecutionException;

import com.google.inject.ImplementedBy;

@ImplementedBy(DummyOAuthenticationServiceImpl.class)
public interface OAuthAuthenticationService {

   /**
    * Generates and saves an OAuth2 refresh token into the given datasink, which is
    * necessary for allowing the app to access the OAuth2 service in future usage
    * without requiring the user to manually authenticate.
    * 
    * @param authenticationCode the authentication code generated by the OAuth2
    *                           service
    * @param oAuthDatasink      the datasink to save the refresh token to
    * @param redirectUri        the redirect uri
    * @throws IOException          if an I/O error occurs
    * @throws InterruptedException if the oauth client throws InterruptedException
    * @throws ExecutionException   if the oauth client throws ExecutionException
    */
   void generateRefreshToken(String authenticationCode, OAuthAuthenticatable oAuthDatasink, String redirectUri)
         throws IOException, InterruptedException, ExecutionException;

   /**
    * Generates the URL necessary for OAuth2 authentication.
    * 
    * @param oAuthDatasink the OAuth2 datasink
    * @return the authentication URL
    */
   String generateAuthenticationUrl(OAuthAuthenticatable oAuthDatasink);
   
   String getRedirectUri();
}